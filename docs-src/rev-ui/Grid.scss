// ROWS
.rev-Row {
  clear: both;
  display: block;
  margin-left: auto;
  margin-right: auto;
  overflow: hidden; //TODO: is this horrible?
  width: 100%;
  &.rev-Row--flex,
  &.rev-Row--smallFlex, {
    display: flex;
  }
  &.rev-Row--unflex,
  &.rev-Row--smallUnflex {
    display: block;
  }
  &.rev-Row--collapse,
  &.rev-Row--smallCollapse {
    padding-left: $grid-column-padding;
    padding-right: $grid-column-padding;
    > .rev-Col {
      padding-left: 0;
      padding-right: 0;
    }
  }
  &.rev-Row--uncollapse,
  &.rev-Row--smallUncollapse {
    padding-left: 0;
    padding-right: 0;
    > .rev-Col {
      padding-left: $grid-column-padding;
      padding-right: $grid-column-padding;
    }
  }
  @media #{$medium-up} {
    &.rev-Row--mediumFlex {
      display: flex;
    }
    &.rev-Row--mediumUnflex {
      display: block;
    }
    &.rev-Row--mediumCollapse {
      padding-left: $grid-column-padding;
      padding-right: $grid-column-padding;
      > .rev-Col {
        padding-left: 0;
        padding-right: 0;
      }
    }
    &.rev-Row--mediumUncollapse {
      padding-left: 0;
      padding-right: 0;
      > .rev-Col {
        padding-left: $grid-column-padding;
        padding-right: $grid-column-padding;
      }
    }
  }
  @media #{$large-up} {
    &.rev-Row--largeFlex {
      display: flex;
    }
    &.rev-Row--largeUnflex {
      display: block;
    }
    &.rev-Row--largeCollapse {
      padding-left: $grid-column-padding;
      padding-right: $grid-column-padding;
      > .rev-Col {
        padding-left: 0;
        padding-right: 0;
      }
    }
    &.rev-Row--largeUncollapse {
      padding-left: 0;
      padding-right: 0;
      > .rev-Col {
        padding-left: $grid-column-padding;
        padding-right: $grid-column-padding;
      }
    }
  }
  @media #{$xlarge-up} {
    &.rev-Row--xlargeFlex {
      display: flex;
    }
    &.rev-Row--xlargeUnflex {
      display: block;
    }
    &.rev-Row--xlargeCollapse {
      padding-left: $grid-column-padding;
      padding-right: $grid-column-padding;
      > .rev-Col {
        padding-left: 0;
        padding-right: 0;
      }
    }
    &.rev-Row--xlargeUncollapse {
      padding-left: 0;
      padding-right: 0;
      > .rev-Col {
        padding-left: $grid-column-padding;
        padding-right: $grid-column-padding;
      }
    }
  }
  @media #{$xxlarge-up} {
    &.rev-Row--xxlargeFlex {
      display: flex;
    }
    &.rev-Row--xxlargeUnflex {
      display: block;
    }
    &.rev-Row--xxlargeCollapse {
      padding-left: $grid-column-padding;
      padding-right: $grid-column-padding;
      > .rev-Col {
        padding-left: 0;
        padding-right: 0;
      }
    }
    &.rev-Row--xxlargeUncollapse {
      padding-left: 0;
      padding-right: 0;
      > .rev-Col {
        padding-left: $grid-column-padding;
        padding-right: $grid-column-padding;
      }
    }
  }
}

// COLUMNS
.rev-Col {
  float: left;
  padding: 0 $grid-column-padding;
  position: relative;
  width: 100%;
  &.rev-Col--end {
    float: right;
  }
}
.rev-Col--centered,
.rev-Col--smallCentered {
  float: none;
  margin-left: auto;
  margin-right: auto;
}
.rev-Col--Uncentered,
.rev-Col--smallUncentered {
  float: left;
}

@for $i from 1 through $grid-columns {
  .rev-Col--small#{$i} {
    width: 100% / $grid-columns * $i;
  }
  .rev-Col--smallOffset#{$i} {
    left: 100% / $grid-columns * $i;
  }
  .rev-Col--smallPush#{$i} {
    @include rev-Col-push($i);
  }
  .rev-Col--smallPull#{$i} {
    @include rev-Col-pull($i);
  }
}
@media #{$medium-up} {
  @for $i from 1 through $grid-columns {
    .rev-Col--medium#{$i} {
      width: 100% / $grid-columns * $i;
    }
    .rev-Col--mediumOffset#{$i} {
      left: 100% / $grid-columns * $i;
    }
    .rev-Col--mediumPush#{$i} {
      @include rev-Col-push($i);
    }
    .rev-Col--mediumPull#{$i} {
      @include rev-Col-pull($i);
    }
  }
  .rev-Col--mediumCentered {
    float: none;
    margin-left: auto;
    margin-right: auto;
  }
  .rev-Col--mediumUncentered {
    float: left;
  }
}
@media #{$large-up} {
  @for $i from 1 through $grid-columns {
    .rev-Col--large#{$i} {
      width: 100% / $grid-columns * $i;
    }
    .rev-Col--largeOffset#{$i} {
      left: 100% / $grid-columns * $i;
    }
    .rev-Col--largePush#{$i} {
      @include rev-Col-push($i);
    }
    .rev-Col--largePull#{$i} {
      @include rev-Col-pull($i);
    }
  }
  .rev-Col--largeCentered {
    float: none;
    margin-left: auto;
    margin-right: auto;
  }
  .rev-Col--largeUncentered {
    float: left;
  }
}
@media #{$xlarge-up} {
  @for $i from 1 through $grid-columns {
    .rev-Col--xlarge#{$i} {
      width: 100% / $grid-columns * $i;
    }
    .rev-Col--xlargeOffset#{$i} {
      left: 100% / $grid-columns * $i;
    }
    .rev-Col--xlargePush#{$i} {
      @include rev-Col-push($i);
    }
    .rev-Col--xlargePull#{$i} {
      @include rev-Col-pull($i);
    }
  }
  .rev-Col--xlargeCentered {
    float: none;
    margin-left: auto;
    margin-right: auto;
  }
  .rev-Col--xlargeUncentered {
    float: left;
  }
}
@media #{$xxlarge-up} {
  @for $i from 1 through $grid-columns {
    .rev-Col--xxlarge#{$i} {
      width: 100% / $grid-columns * $i;
    }
    .rev-Col--xxlargeOffset#{$i} {
      left: 100% / $grid-columns * $i;
    }
    .rev-Col--xxlargePush#{$i} {
      @include rev-Col-push($i);
    }
    .rev-Col--xxlargePull#{$i} {
      @include rev-Col-pull($i);
    }
  }
  .rev-Col--xxlargeCentered {
    float: none;
    margin-left: auto;
    margin-right: auto;
  }
  .rev-Col--xxlargeUncentered {
    float: left;
  }
}
