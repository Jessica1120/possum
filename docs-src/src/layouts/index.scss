@import "../../../scss/app";

.CodeMirror.CodeMirror {
  height: auto;
}
.CodeMirror-line.CodeMirror-line {
  font-size: $global-font-size-small;
  line-height: $global-vertical-space;
  padding: 0;
}
.CodeMirror-lines.CodeMirror-lines {
  padding: $global-vertical-space / 4 0;
}
.CodeMirror-scroll {
  margin-left: $global-horizontal-space;
}
.playground {
  display: flex;
  flex-wrap: wrap;
  margin-bottom: $global-vertical-space * 2;
}
.playgroundCode {
  margin-bottom: $global-vertical-space;
  order: 1;
  width: 100%;
}
.playgroundError {
  font-family: monospace;
  overflow-x: scroll;
  white-space: pre-wrap;
  @include panel($padded: true);
  @include alert-color-stack;
}
.playgroundPreview {
  order: 0;
  width: 100%;
}
.playgroundPreview--FakeViewportContainer {
  .playgroundPreview {
    background: url('https://3ulsmb4eg8vz37c0vz2si64j-wpengine.netdna-ssl.com/wp-content/uploads/2016/07/75ff3f3c-4aa5-11e6-9c23-4491699777fe.jpg');
    background-position: center;
    background-size: cover;
    min-height: 320px;
    min-width: 320px;
    transform: scale(1.0);
    width: 100%;
  }
}
// For grid example pages, colorize columns and mark the edges, and put spacing between rows
.ColumnExamples {
  &.rev-Row,
  .rev-Row {
    margin-bottom: $global-vertical-space;
    .rev-Row {
      margin-bottom: 0;
    }
  }
  .rev-Col {
    text-align: center;
    background-clip: content-box;
    position: relative;
    // All of this is a way to put an outline-esque border on the left and
    // right edge without taking up space (doing it this way, because outline
    // can't be applied to only left and right).
    // If we just put left and right borders, it can cause weird overflows
    // and wrapping with the grid, which is bad for a grid demo page
    &:before {
      // Needs content to be placed in DOM
      content: ' ';
      // Position to be the same size and location as the column
      bottom: 0;
      left: 0;
      position: absolute;
      right: 0;
      top: 0;
      // Mark left and right edges
      border-left: 1px dashed $gray;
      border-right: 1px dashed $gray;
    }
  }
  // Throw some grayscale colors on the grid columns to show what space they
  // occupy
  .columns:nth-child(6n+1) {
    @include color-stack($gray);
  }
  .columns:nth-child(6n+2) {
    @include color-stack($black);

  }
  .columns:nth-child(6n+3) {
    @include color-stack($darker-gray);
  }
  .columns:nth-child(6n+4) {
    @include color-stack($dark-gray);
  }
  .columns:nth-child(6n+5) {
    @include color-stack($light-gray);
  }
  .columns:nth-child(6n+6) {
    @include color-stack($lighter-gray);
  }
  // For nesting example, show the extents of the nested row
  .columns .row {
    outline: 1px solid $white;
  }
}
